library(shiny)
library(tidyverse)
library(gridExtra)
library(palmerpenguins)
library(RColorBrewer)
library(ggdensity)
library(ggridges)
library(ggdist)
library(GGally)

color_brewer_palette_names <- c("Accent", "Blues","BrBG","BuGn","BuPu","Dark2","GnBu","Greens","Greys","Oranges","OrRd","Paired","Pastel1","Pastel2","PiYG","PRGn","PuBu","PuBuGn","PuOr","PuRd","Purples","RdBu",
                                "RdGy","RdPu","RdYlBu","RdYlGn","Reds","Set1","Set2","Set3",  "Spectral","YlGn","YlGnBu","YlOrBr","YlOrRd")
penguins <- na.omit(penguins)
mean_mass <- penguins %>%
  group_by(species, sex) %>% 
  summarise(mean_mass = mean(body_mass_g, na.rm = TRUE)) 
means <- aggregate(body_mass_g ~ species, data = penguins, mean)


ui <- fluidPage(
  tabsetPanel(
    tabPanel("Plots",
             radioButtons("palette", "Select Color Brewer Palette:", 
                          choices = color_brewer_palette_names, 
                          selected = "Set1", inline = TRUE),
             column(12, plotOutput("density1"), plotOutput("density2"), 
                    plotOutput("density3"), plotOutput("density4"), plotOutput("density5"),plotOutput("density6"),plotOutput("density7"),plotOutput("density8"),plotOutput("density9"),plotOutput("density10"),plotOutput("density11"),plotOutput("density12")),
             column(12, textOutput("density1_code"), textOutput("density2_code"), 
                    textOutput("density3_code"), textOutput("density4_code"), textOutput("density5_code"),textOutput("density6_code"),textOutput("density7_code"),textOutput("density8_code"),textOutput("density9_code"),textOutput("density10_code"), textOutput("density11_code"), textOutput("density12_code"))
    ),
    tabPanel("Code",
             verbatimTextOutput("text")
    )
  )
)

server <- function(input, output) {
  
  output$density1 <- renderPlot({
    ggplot(penguins, aes(x = bill_length_mm, fill = species)) +
      geom_density(alpha = 0.7) + theme_bw() +
      scale_fill_brewer(palette = input$palette, na.value = "black") +
      theme(legend.position = c(0.8, 0.8))
  })
  
  output$density2 <- renderPlot({
    ggplot(penguins, aes(x = species, y = body_mass_g, fill=species)) +
      geom_boxplot() +
      scale_fill_brewer(palette = input$palette, na.value = "black") +
      theme(legend.position = c(0.1, 0.8))
  })
  
  output$density3 <- renderPlot({
    
    ggplot(penguins, aes(x = species, y = body_mass_g, fill = species)) + 
      geom_violin(alpha = 0.3) + 
      geom_boxplot(width = 0.2) + 
      geom_density(kernel = "gaussian", adjust = 2, fill = "white", alpha = 0.3) +
      geom_point(alpha = 0.5, size = 2) +
      geom_point(data = means, aes(x = species, y = body_mass_g), shape = 21, size = 4) +
      theme_classic() + 
      labs(x = "Species", y = "Body Mass (g)") + 
      ggtitle("Palmer Penguins") + 
      scale_fill_brewer(palette = input$palette, na.value = "black")
    
  })
  
  
  output$density4 <- renderPlot({
    ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm, group = species)) +
      geom_point(aes(color = species, shape = species), size = 3, alpha = 0.8) +
      geom_smooth(method = "lm", se = FALSE, aes(color = species)) +
      theme_classic() + 
      scale_color_brewer(palette = input$palette, na.value = "black")
    
  })
  
  output$density5 <- renderPlot({
    ggplot(penguins, aes(x = 1, fill = species)) +
      geom_bar() +
      coord_polar(theta = "y") +
      theme_classic() + 
      scale_fill_brewer(palette = input$palette, na.value = "black")
  })
  output$density6 <- renderPlot({
    ggplot(penguins, aes(flipper_length_mm, bill_length_mm, fill = species)) +
      geom_hdr(xlim = c(160, 240), ylim = c(30, 70)) +
      geom_point(shape = 21) +
      theme_classic() + 
      scale_fill_brewer(palette = input$palette, na.value = "black")
  })
  
  output$density7 <- renderPlot({
    ggplot(data = penguins, aes(x = flipper_length_mm)) +
      geom_histogram(aes(fill = species), alpha = 0.5, position = "identity") +
      theme_classic() + 
      scale_fill_brewer(palette = input$palette, na.value = "black")
  })
  
  output$density8 <- renderPlot({
    penguins %>%
      select(species, body_mass_g, ends_with("_mm")) %>% 
      GGally::ggpairs(aes(fill = species)) +
      theme_classic() + 
      scale_fill_brewer(palette = input$palette, na.value = "black")
  })
  output$density9 <- renderPlot({
    ggplot(penguins) +
      geom_density_ridges(
        aes(x = flipper_length_mm, y = species, fill = sex),
        scale = 1.5,
        alpha = 0.5) + 
      scale_fill_brewer(palette = input$palette, na.value = "black")
  })
  
  output$density10 <- renderPlot({
    penguins %>%
      ggplot(aes(x=flipper_length_mm, y=species, fill=species))+
      stat_slab(aes(thickness = stat(pdf*n)), 
                scale = 0.7) +
      stat_dotsinterval(side = "bottom", 
                        scale = 0.7, 
                        slab_size = NA) +
      scale_fill_brewer(palette = input$palette, na.value = "black")
  })
  
  output$density11 <- renderPlot({
    penguins %>%
      drop_na() %>%
      count(sex, species) %>%
      ggplot() + geom_col(aes(x = species, y = n, fill = species)) +
      geom_label(aes(x = species, y = n, label = n)) +
      facet_wrap(~sex) +
      theme_minimal() +
      scale_fill_brewer(palette = input$palette, na.value = "black") +
      labs(title = 'Penguins Species ~ Gender')
  })
  
  output$density12 <- renderPlot({
    ggparcoord(data = penguins, columns = 3:6, alphaLines = 0.2, groupColumn = "species", boxplot=TRUE) +
      theme_minimal() +
      scale_color_brewer(palette = input$palette, na.value = "black") +
      labs(title = 'Penguins Species ~ Gender')
  })
 
  tab1_code <- "
  
library(shiny)
library(tidyverse)
library(gridExtra)
library(palmerpenguins)
library(RColorBrewer)
library(ggdensity)
library(ggridges)
library(ggdist)
library(GGally)

penguins <- na.omit(penguins)

mean_mass <- penguins %>%
  group_by(species, sex) %>% 
  summarise(mean_mass = mean(body_mass_g, na.rm = TRUE)) 
  
means <- aggregate(body_mass_g ~ species, data = penguins, mean)
  
  
  ## PLOT 1

ggplot(penguins, aes(x = bill_length_mm, fill = species)) +
      geom_density(alpha = 0.7) + theme_bw() +
      scale_fill_brewer(palette = 'Spectral', na.value = 'black') +
      theme(legend.position = c(0.8, 0.8))

## PLOT 2

ggplot(penguins, aes(x = species, y = body_mass_g, fill=species)) +
      geom_boxplot() +
      scale_fill_brewer(palette = 'Spectral', na.value = 'black') +
      theme(legend.position = c(0.1, 0.8))

## PLOT 3

ggplot(penguins, aes(x = species, y = body_mass_g, fill = species)) + 
      geom_violin(alpha = 0.3) + 
      geom_boxplot(width = 0.2) + 
      geom_density(kernel = 'gaussian', adjust = 2, fill = 'white', alpha = 0.3) +
      geom_point(alpha = 0.5, size = 2) +
      geom_point(data = means, aes(x = species, y = body_mass_g), shape = 21, size = 4) +
      theme_classic() + 
      labs(x = 'Species', y = 'Body Mass (g)') + 
      ggtitle('Palmer Penguins') + 
      scale_fill_brewer(palette = 'Spectral', na.value = 'black')

## PLOT 4

ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm, group = species)) +
      geom_point(aes(color = species, shape = species), size = 3, alpha = 0.8) +
      geom_smooth(method = 'lm', se = FALSE, aes(color = species)) +
      theme_classic() + 
      scale_color_brewer(palette = 'Spectral', na.value = 'black')


## PLOT 5

ggplot(penguins, aes(x = 1, fill = species)) +
      geom_bar() +
      coord_polar(theta = 'y') +
      theme_classic() + 
      scale_fill_brewer(palette = 'Spectral', na.value = 'black')

## PLOT 6

ggplot(penguins, aes(flipper_length_mm, bill_length_mm, fill = species)) +
      geom_hdr(xlim = c(160, 240), ylim = c(30, 70)) +
      geom_point(shape = 21) +
      theme_classic() + 
      scale_fill_brewer(palette = 'Spectral', na.value = 'black')


## PLOT 7


ggplot(data = penguins, aes(x = flipper_length_mm)) +
      geom_histogram(aes(fill = species), alpha = 0.5, position = 'identity') +
      theme_classic() + 
      scale_fill_brewer(palette = 'Spectral', na.value = 'black')
    

## PLOT 8

penguins %>% select(species, body_mass_g, ends_with('_mm')) %>% 
      GGally::ggpairs(aes(fill = species)) +
      theme_classic() + 
      scale_fill_brewer(palette = 'Spectral', na.value = 'black')

## PLOT 9

ggplot(penguins) +
      geom_density_ridges(
        aes(x = flipper_length_mm, y = species, fill = sex),
        scale = 1.5,
        alpha = 0.5) + 
      scale_fill_brewer(palette = 'Spectral', na.value = 'black')


## PLOT 10

penguins %>% ggplot(aes(x=flipper_length_mm, y=species, fill=species))+
      stat_slab(aes(thickness = stat(pdf*n)), 
                scale = 0.7) +
      stat_dotsinterval(side = 'bottom', 
                        scale = 0.7, 
                        slab_size = NA) +
      scale_fill_brewer(palette = 'Spectral', na.value = 'black')


## PLOT 11

penguins %>% drop_na() %>% count(sex, species) %>%
      ggplot() + geom_col(aes(x = species, y = n, fill = species)) +
      geom_label(aes(x = species, y = n, label = n)) +
      facet_wrap(~sex) +
      theme_minimal() +
      scale_fill_brewer(palette = 'Spectral', na.value = 'black') +
      labs(title = 'Penguins Species ~ Gender')


## PLOT 12

ggparcoord(data = penguins, columns = 3:6, alphaLines = 0.2, groupColumn = 'species', boxplot=TRUE) +
      theme_minimal() +
      scale_color_brewer(palette = 'Spectral', na.value = 'black') +
      labs(title = 'Penguins Species ~ Gender')
  
  "
  
  output$text <- renderText({
  
    paste("```\n", tab1_code, "```\n", sep = "")
    
    
  })
  
}

shinyApp(ui, server)
